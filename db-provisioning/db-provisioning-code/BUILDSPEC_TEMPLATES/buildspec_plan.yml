version: 0.2
env:
  parameter-store:
    allocated_storage: /demo/dbdevops/target/db/allocated_storage
    backup_retention_period: /demo/dbdevops/target/db/backup_retention_period
    dbname: /demo/dbdevops/target/db/dbname
    engine: /demo/dbdevops/target/db/engine
    engine_version: /demo/dbdevops/target/db/engine_version
    family: /demo/dbdevops/target/db/family
    instace_class: /demo/dbdevops/target/db/instace_class
    max_allocated_storage: /demo/dbdevops/target/db/max_allocated_storage
    name: /demo/dbdevops/target/db/name
    parameter_group_name: /demo/dbdevops/target/db/parameter_group_name
    port: /demo/dbdevops/target/db/port
    transit: /demo/dbdevops/target/db/transit
    tgt_db_secret: /demo/dbdevops/target/db/secret_mgr_name
    subnet_ids: /demo/dbdevops/target/infra/subnet_ids
    vpc_id: /demo/dbdevops/target/infra/vpc_id
    environment: /demo/dbdevops/target/environment
    region: /demo/dbdevops/target/infra/aws_region
    project_code: /demo/dbdevops/target/project_name
    client: /demo/dbdevops/target/client
    identifier: /demo/dbdevops/target/identifier
    sg_ports: /demo/dbdevops/target/db/sg_ports
    cidr_blocks: /demo/dbdevops/target/infra/cidr_blocks
 
  exported-variables:
    - allocated_storage
    - backup_retention_period
    - dbname
    - engine
    - engine_version
    - family
    - instace_class
    - max_allocated_storage
    - name
    - parameter_group_name
    - port
    - transit
    - tgt_db_secret
    - subnet_ids
    - vpc_id
    - environment
    - region
    - project_code
    - client
    - identifier
    - sg_ports
    - cidr_blocks
phases:
  install:
    commands:
    #Terraform Install
      - apt update
      - apt -y install curl
      - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
      - apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - apt update
      - apt -y install terraform=1.3.6
    

  build:
    commands:
      - "cd ${CODEBUILD_SRC_DIR}/db-provisioning/db-provisioning-code"
      - "echo ${sg_ports}"
      - "export TF_VAR_allocated_storage=${allocated_storage}"
      - "export TF_VAR_backup_retention_period=${backup_retention_period}"
      - "export TF_VAR_db_name=${dbname}"
      - "export TF_VAR_engine=${engine}"
      - "export TF_VAR_engine_version=${engine_version}"
      - "export TF_VAR_family=${family}"
      - "export TF_VAR_host=${host}"
      - "export TF_VAR_instance_class=${instace_class}"
      - "export TF_VAR_max_allocated_storage=${max_allocated_storage}"
      - "export TF_VAR_name=${name}"
      - "export TF_VAR_parameter_group_name=${parameter_group_name}"
      - "export TF_VAR_tgt_db_secret=${tgt_db_secret}"
      - "export TF_VAR_port=${port}"
      - "export TF_VAR_ssl_mode=${ssl_mode}"
      - "export TF_VAR_transit=${transit}"
      - "export TF_VAR_subnet_ids=${subnet_ids}"
      - "export TF_VAR_vpc_id=${vpc_id}"
      - "export TF_VAR_env=${environment}"
      - "export TF_VAR_region=${aws_region}"
      - "export TF_VAR_project_code=${project_code}"
      - "export TF_VAR_client=${client}"
      - "export TF_VAR_identifier=${identifier}"
      - "export TF_VAR_sg_ports=${sg_ports}"
      - "export TF_VAR_cidr_blocks=${cidr_blocks}"
      - "terraform init"
      - "echo ## TERRAFORM PLAN : Starting with the Terraform PLAN"
      - "terraform plan -lock=false -out=tfplan"

artifacts:
  files:
    - '**/*'
